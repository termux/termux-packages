--- a/libziparchive/zip_archive.cc
+++ b/libziparchive/zip_archive.cc
@@ -46,7 +46,7 @@
 #define lseek64 lseek
 #endif
 
-#if defined(__BIONIC__)
+#if defined(__BIONIC__) && __ANDROID_API__ >= 29
 #include <android/fdsan.h>
 #endif
 
@@ -148,7 +148,7 @@ constexpr size_t kPageSize = 4096;
 #endif
 }
 
-#if defined(__BIONIC__)
+#if defined(__BIONIC__) && __ANDROID_API__ >= 29
 static uint64_t GetOwnerTag(const ZipArchive* archive) {
   return android_fdsan_create_owner_tag(ANDROID_FDSAN_OWNER_TYPE_ZIPARCHIVE,
                                         reinterpret_cast<uint64_t>(archive));
@@ -162,7 +162,7 @@ ZipArchive::ZipArchive(MappedZipFile&& map, bool assume_ownership)
       central_directory(),
       directory_map(),
       num_entries(0) {
-#if defined(__BIONIC__)
+#if defined(__BIONIC__) && __ANDROID_API__ >= 29
   if (assume_ownership) {
     CHECK(mapped_zip.GetFileDescriptor() >= 0 || !mapped_zip.GetBasePtr());
     android_fdsan_exchange_owner_tag(mapped_zip.GetFileDescriptor(), 0, GetOwnerTag(this));
@@ -180,7 +180,7 @@ ZipArchive::ZipArchive(const void* address, size_t length)
 
 ZipArchive::~ZipArchive() {
   if (close_file && mapped_zip.GetFileDescriptor() >= 0) {
-#if defined(__BIONIC__)
+#if defined(__BIONIC__) && __ANDROID_API__ >= 29
     android_fdsan_close_with_tag(mapped_zip.GetFileDescriptor(), GetOwnerTag(this));
 #else
     close(mapped_zip.GetFileDescriptor());
@@ -1475,7 +1475,7 @@ static int32_t inflateImpl(const zip_archive::Reader& reader,
 
       remaining_bytes -= read_size;
 
-      zstream.next_in = buf;
+      zstream.next_in = const_cast<Bytef*>(buf);
       zstream.avail_in = read_size;
     }
 
