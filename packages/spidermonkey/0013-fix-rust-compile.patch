--- a/toolkit/components/extensions/storage/moz.build
+++ b/toolkit/components/extensions/storage/moz.build
@@ -17,7 +17,7 @@
 # a delegate for consumers to use instead. Android Components can then provide
 # an implementation of the delegate that's backed by the Rust component. For
 # details, please see bug 1626506, comment 4.
-if CONFIG["MOZ_WIDGET_TOOLKIT"] != "android":
+if False:
     EXPORTS.mozilla.extensions.storage += [
         "ExtensionStorageComponents.h",
     ]
--- a/toolkit/library/rust/shared/Cargo.toml
+++ b/toolkit/library/rust/shared/Cargo.toml
@@ -104,7 +104,6 @@
 # Since we're building with at least rustc 1.63, enable rust 1.57 features (use of try_reserve methods).
 fallible_collections = { version = "0.4", features = ["rust_1_57"] }
 
-[target.'cfg(not(target_os = "android"))'.dependencies]
 viaduct = "0.1"
 webext_storage_bridge = { path = "../../../components/extensions/storage/webext_storage_bridge" }
 tabs = { version = "0.1" }
--- a/toolkit/library/rust/shared/lib.rs
+++ b/toolkit/library/rust/shared/lib.rs
@@ -51,20 +51,16 @@
 
 extern crate audio_thread_priority;
 
-#[cfg(not(target_os = "android"))]
 extern crate webext_storage_bridge;
 
-#[cfg(not(target_os = "android"))]
 extern crate tabs;
 
-#[cfg(not(target_os = "android"))]
 mod reexport_appservices_uniffi_scaffolding {
     tabs::uniffi_reexport_scaffolding!();
     relevancy::uniffi_reexport_scaffolding!();
     suggest::uniffi_reexport_scaffolding!();
 }
 
-#[cfg(not(target_os = "android"))]
 extern crate suggest;
 
 #[cfg(feature = "webrtc")]
@@ -93,7 +88,6 @@
 extern crate l10nregistry_ffi;
 extern crate localization_ffi;
 
-#[cfg(not(target_os = "android"))]
 extern crate viaduct;
 
 extern crate gecko_logger;
