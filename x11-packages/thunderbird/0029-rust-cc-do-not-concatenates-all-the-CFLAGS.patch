`rust-cc` changed how it collects `CFLAGS` from environment variables.
It retrieves environment variables according to a specific set of rules,
which are described in [1]. Previously, it used the first match [2,3],
but now it concatenates all matches and passes them to `CC` [4,5]. This
breaks Termux's build since Termux's `CFLAGS` include flags related to
the Android target and unrelated to the target when compiling `glslopt`
as a host tool, which is `x86_64-linux-gnu`.

This patch will restore the old behaviour. For Termux we know how it is going.

[1] https://docs.rs/cc/latest/cc/
[2] https://github.com/rust-lang/cc-rs/blob/fcf940ef66f23f411aa50473baa14df9ed2f2cda/src/lib.rs#L1910
[3] https://github.com/rust-lang/cc-rs/blob/fcf940ef66f23f411aa50473baa14df9ed2f2cda/src/lib.rs#L3669-3681
[4] https://github.com/rust-lang/cc-rs/blob/cda8b386d419f3adb0c15b729af5504201689aa1/src/lib.rs#L1977
[5] https://github.com/rust-lang/cc-rs/blob/cda8b386d419f3adb0c15b729af5504201689aa1/src/lib.rs#L3836-L3858

--- a/third_party/rust/cc/src/lib.rs
+++ b/third_party/rust/cc/src/lib.rs
@@ -3806,14 +3806,13 @@
 
     /// Get values from CFLAGS-style environment variable.
     fn envflags(&self, env: &str) -> Result<Option<Vec<String>>, Error> {
-        // Collect from all environment variables, in reverse order as in
-        // `getenv_with_target_prefixes` precedence (so that `CFLAGS_$TARGET`
-        // can override flags in `TARGET_CFLAGS`, which overrides those in
-        // `CFLAGS`).
         let mut any_set = false;
         let mut res = vec![];
-        for env in self.target_envs(env)?.iter().rev() {
+        for env in self.target_envs(env)?.iter() {
             if let Some(var) = self.getenv(env) {
+                if any_set {
+                    continue;
+                }
                 any_set = true;
 
                 let var = var.to_string_lossy();
--- a/comm/third_party/rust/cc/src/lib.rs
+++ b/comm/third_party/rust/cc/src/lib.rs
@@ -3806,14 +3806,13 @@
 
     /// Get values from CFLAGS-style environment variable.
     fn envflags(&self, env: &str) -> Result<Option<Vec<String>>, Error> {
-        // Collect from all environment variables, in reverse order as in
-        // `getenv_with_target_prefixes` precedence (so that `CFLAGS_$TARGET`
-        // can override flags in `TARGET_CFLAGS`, which overrides those in
-        // `CFLAGS`).
         let mut any_set = false;
         let mut res = vec![];
-        for env in self.target_envs(env)?.iter().rev() {
+        for env in self.target_envs(env)?.iter() {
             if let Some(var) = self.getenv(env) {
+                if any_set {
+                    continue;
+                }
                 any_set = true;
 
                 let var = var.to_string_lossy();
--- a/comm/third_party/rust/cc/.cargo-checksum.json
+++ b/comm/third_party/rust/cc/.cargo-checksum.json
@@ -1 +1 @@
-{"files":{"CHANGELOG.md":"8d0fc70ced012ec46184f7ae691f990e3a387d76fac67a6b215f73a74f75bb33","Cargo.lock":"79d46bef8e6b9975220d555392dd79fbf9d4d661cd052125879aa41bc2c25c38","Cargo.toml":"ad7d44bba39c9241c7c20b9f30b9cadb0179f326765cd79d89a56b5f4c77afd3","LICENSE-APACHE":"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2","LICENSE-MIT":"378f5840b258e2779c39418f3f2d7b2ba96f1c7917dd6be0713f88305dbda397","README.md":"f1ddbede208a5b78333a25dac0a7598e678e9b601a7d99a791069bddaf180dfe","clippy.toml":"aa7850db4350883c8f373bd0d6b4d19bf3b75f13c1c238e24368c109cb52fb1d","src/command_helpers.rs":"5cfff5970c4ef21f8a241388684c6b7d73c5562a604168493cd12a2685ceb4b7","src/detect_compiler_family.c":"97ca4b021495611e828becea6187add37414186a16dfedd26c2947cbce6e8b2f","src/flags.rs":"54d3e7da884c5063845ec041b8f67e7858a794e4ae476e24a48b44c4019d95b6","src/lib.rs":"fe454bda151b3e9967514c7baead4621c892d2a7119d99391ccba02c362ee72d","src/parallel/async_executor.rs":"4ce24435fff6b6555b43fee042c16bd65d4150d0346567f246b9190d85b45983","src/parallel/job_token.rs":"47634d56691302b98c646f5f01aea1ba8ab1d3bfd392b1877a50ae0872a1b242","src/parallel/mod.rs":"bd9c1334d17d138c281961c690b8d8118a2d6295a7d6cd7296826255436fa063","src/parallel/stderr.rs":"b5248523c9328b08c17ea73b3b22c250304cfb70dff3571ec296b35bb1c42978","src/target.rs":"a9d2d347a3a08015531f00b32bc8a7478f5636822cc8e0237ea9efa3f07d4cd4","src/target/apple.rs":"8fb110d87c3c12f62d0b1cf61ff5656b96d651501bc7dc8b021057b675486398","src/target/generated.rs":"e2d6252b00418aedb22ea64186a1ef6e9812515385bd3c860a8b0e7a5fe2b1b0","src/target/llvm.rs":"9bdc03942574aa9a530a9707218a637c7df8d29cf6fb19f287a4330ed3f5fc4d","src/target/parser.rs":"1660071e8b239e8b14c2f88396a6a9736f2338d3064aaf0add8ec82c17084c85","src/tempfile.rs":"ebafb5b0e5d08b0706916ed911d4245240e60c3e2d0c9a1630c520842988a2b3","src/tool.rs":"2e2af440a32d030fa1fc225f9f94daf51f659f861b234b2a4976e254508b0da9","src/utilities.rs":"52b30b24a1c31cdefb105309ee5220cfc9fca76eaf4e6d6509c3e19f431448fe","src/windows/com.rs":"a2800ddb81215fff2bf618336f5c4ff8e8bdb746dd18b795873c7304b3f2a5e3","src/windows/find_tools.rs":"303d08bfffb69e24bd567d10bca141ca7a4ab0943eea6a215bc835044295a9a9","src/windows/mod.rs":"6d8492c44c05e1abe6ea0b55178a7a98fec9722fdf684cd3813d8a6e82e4e10a","src/windows/registry.rs":"c521b72c825e8095843e73482ffa810ed066ad8bb9f86e6db0c5c143c171aba1","src/windows/setup_config.rs":"754439cbab492afd44c9755abcbec1a41c9b2c358131cee2df13c0e996dbbec8","src/windows/vs_instances.rs":"946527cf8fd32c3472f6a2884dcdec290763101097334c7478f9c24c3950db6b","src/windows/winapi.rs":"250d51c1826d1a2329e9889dd9f058cfce253dbf2a678b076147c6cdb5db046c","src/windows/windows_link.rs":"5b4648ebc22b028caca9f4b4bf8881fe2d094b7bec217264ba2e6e2c49d1ccee","src/windows/windows_sys.rs":"593d8e126b090cd48aace7777ef5fd89845731b78a897cb2dadf41f867e44e44"},"package":"deec109607ca693028562ed836a5f1c4b8bd77755c4e132fc5ce11b0b6211ae7"}
\ No newline at end of file
+{"files":{"CHANGELOG.md":"8d0fc70ced012ec46184f7ae691f990e3a387d76fac67a6b215f73a74f75bb33","Cargo.lock":"79d46bef8e6b9975220d555392dd79fbf9d4d661cd052125879aa41bc2c25c38","Cargo.toml":"ad7d44bba39c9241c7c20b9f30b9cadb0179f326765cd79d89a56b5f4c77afd3","LICENSE-APACHE":"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2","LICENSE-MIT":"378f5840b258e2779c39418f3f2d7b2ba96f1c7917dd6be0713f88305dbda397","README.md":"f1ddbede208a5b78333a25dac0a7598e678e9b601a7d99a791069bddaf180dfe","clippy.toml":"aa7850db4350883c8f373bd0d6b4d19bf3b75f13c1c238e24368c109cb52fb1d","src/command_helpers.rs":"5cfff5970c4ef21f8a241388684c6b7d73c5562a604168493cd12a2685ceb4b7","src/detect_compiler_family.c":"97ca4b021495611e828becea6187add37414186a16dfedd26c2947cbce6e8b2f","src/flags.rs":"54d3e7da884c5063845ec041b8f67e7858a794e4ae476e24a48b44c4019d95b6","src/lib.rs":"3df2eed81dd35df69523fe0057d983ab35c53a3e4f9234c5e0f95dd14ada4b7c","src/parallel/async_executor.rs":"4ce24435fff6b6555b43fee042c16bd65d4150d0346567f246b9190d85b45983","src/parallel/job_token.rs":"47634d56691302b98c646f5f01aea1ba8ab1d3bfd392b1877a50ae0872a1b242","src/parallel/mod.rs":"bd9c1334d17d138c281961c690b8d8118a2d6295a7d6cd7296826255436fa063","src/parallel/stderr.rs":"b5248523c9328b08c17ea73b3b22c250304cfb70dff3571ec296b35bb1c42978","src/target.rs":"a9d2d347a3a08015531f00b32bc8a7478f5636822cc8e0237ea9efa3f07d4cd4","src/target/apple.rs":"8fb110d87c3c12f62d0b1cf61ff5656b96d651501bc7dc8b021057b675486398","src/target/generated.rs":"e2d6252b00418aedb22ea64186a1ef6e9812515385bd3c860a8b0e7a5fe2b1b0","src/target/llvm.rs":"9bdc03942574aa9a530a9707218a637c7df8d29cf6fb19f287a4330ed3f5fc4d","src/target/parser.rs":"1660071e8b239e8b14c2f88396a6a9736f2338d3064aaf0add8ec82c17084c85","src/tempfile.rs":"ebafb5b0e5d08b0706916ed911d4245240e60c3e2d0c9a1630c520842988a2b3","src/tool.rs":"2e2af440a32d030fa1fc225f9f94daf51f659f861b234b2a4976e254508b0da9","src/utilities.rs":"52b30b24a1c31cdefb105309ee5220cfc9fca76eaf4e6d6509c3e19f431448fe","src/windows/com.rs":"a2800ddb81215fff2bf618336f5c4ff8e8bdb746dd18b795873c7304b3f2a5e3","src/windows/find_tools.rs":"303d08bfffb69e24bd567d10bca141ca7a4ab0943eea6a215bc835044295a9a9","src/windows/mod.rs":"6d8492c44c05e1abe6ea0b55178a7a98fec9722fdf684cd3813d8a6e82e4e10a","src/windows/registry.rs":"c521b72c825e8095843e73482ffa810ed066ad8bb9f86e6db0c5c143c171aba1","src/windows/setup_config.rs":"754439cbab492afd44c9755abcbec1a41c9b2c358131cee2df13c0e996dbbec8","src/windows/vs_instances.rs":"946527cf8fd32c3472f6a2884dcdec290763101097334c7478f9c24c3950db6b","src/windows/winapi.rs":"250d51c1826d1a2329e9889dd9f058cfce253dbf2a678b076147c6cdb5db046c","src/windows/windows_link.rs":"5b4648ebc22b028caca9f4b4bf8881fe2d094b7bec217264ba2e6e2c49d1ccee","src/windows/windows_sys.rs":"593d8e126b090cd48aace7777ef5fd89845731b78a897cb2dadf41f867e44e44"},"package":"deec109607ca693028562ed836a5f1c4b8bd77755c4e132fc5ce11b0b6211ae7"}
\ No newline at end of file
