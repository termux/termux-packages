--- a/toolkit/components/extensions/storage/moz.build
+++ b/toolkit/components/extensions/storage/moz.build
@@ -11,7 +11,7 @@
 # a delegate for consumers to use instead. Android Components can then provide
 # an implementation of the delegate that's backed by the Rust component. For
 # details, please see bug 1626506, comment 4.
-if CONFIG["MOZ_WIDGET_TOOLKIT"] != "android":
+if False:
     EXTRA_JS_MODULES += [
         "ExtensionStorageComponents.sys.mjs",
     ]
--- a/toolkit/library/rust/shared/Cargo.toml
+++ b/toolkit/library/rust/shared/Cargo.toml
@@ -113,10 +113,10 @@
 
 libz-rs-sys = { version = "0.4.1", features = ["custom-prefix"], optional = true }
 
-[target.'cfg(any(target_os = "android", target_os = "macos", target_os = "ios", all(target_os = "windows", not(target_arch = "aarch64"))))'.dependencies]
+[target.'cfg(any(target_os = "macos", target_os = "ios", all(target_os = "windows", not(target_arch = "aarch64"))))'.dependencies]
 osclientcerts = { path = "../../../../security/manager/ssl/osclientcerts" }
 
-[target.'cfg(not(target_os = "android"))'.dependencies]
+[target.'cfg(target_os = "android")'.dependencies]
 gkrust-uniffi-components = { path = "../../../components/uniffi-bindgen-gecko-js/components/", features = ["xpcom"] }
 uniffi-bindgen-gecko-js-test-fixtures = { path = "../../../components/uniffi-bindgen-gecko-js/test-fixtures/", optional = true }
 viaduct = "0.1"
--- a/toolkit/library/rust/shared/lib.rs
+++ b/toolkit/library/rust/shared/lib.rs
@@ -89,20 +89,17 @@
 extern crate trust_anchors;
 
 #[cfg(any(
-    target_os = "android",
     target_os = "macos",
     target_os = "ios",
     all(target_os = "windows", not(target_arch = "aarch64"))
 ))]
 extern crate osclientcerts;
 
-#[cfg(not(target_os = "android"))]
 extern crate gkrust_uniffi_components;
 
-#[cfg(all(feature = "uniffi_fixtures", not(target_os = "android")))]
+#[cfg(feature = "uniffi_fixtures")]
 extern crate uniffi_bindgen_gecko_js_test_fixtures;
 
-#[cfg(not(target_os = "android"))]
 extern crate viaduct;
 
 extern crate gecko_logger;
