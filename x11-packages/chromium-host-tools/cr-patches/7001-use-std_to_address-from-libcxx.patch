https://sources.debian.org/patches/chromium/121.0.6167.139-1/fixes/std-to-address.patch

--- a/mojo/public/cpp/bindings/type_converter.h
+++ b/mojo/public/cpp/bindings/type_converter.h
@@ -11,6 +11,11 @@
 #include <memory>
 #include <type_traits>
 
+namespace {
+template <class T> constexpr T *clang_to_address(T *P) { return P; }
+template <class T> auto clang_to_address(const T &P) -> decltype(P.operator->()) { return P.operator->(); }
+}
+
 namespace mojo {
 
 // NOTE: When possible, please consider using StructTraits / UnionTraits /
@@ -100,11 +105,11 @@
 template <typename T, typename U>
   requires requires(const U& obj) {
     not std::is_pointer_v<U>;
-    { mojo::ConvertTo<T>(std::to_address(obj)) } -> std::same_as<T>;
+    { mojo::ConvertTo<T>(::clang_to_address(obj)) } -> std::same_as<T>;
   }
 inline T ConvertTo(const U& obj) {
-  return mojo::ConvertTo<T>(std::to_address(obj));
+  return mojo::ConvertTo<T>(::clang_to_address(obj));
 }
 
 template <typename T, typename U>
