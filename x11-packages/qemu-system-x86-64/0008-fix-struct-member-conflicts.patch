diff -uNr qemu-8.2.0/linux-user/aarch64/signal.c qemu-8.2.0.mod/linux-user/aarch64/signal.c
--- qemu-8.2.0/linux-user/aarch64/signal.c	2023-12-19 23:24:34.000000000 +0200
+++ qemu-8.2.0.mod/linux-user/aarch64/signal.c	2024-06-12 21:15:01.494536215 +0300
@@ -40,7 +40,7 @@
     target_stack_t tuc_stack;
     target_sigset_t tuc_sigmask;
     /* glibc uses a 1024-bit sigset_t */
-    char __unused[1024 / 8 - sizeof(target_sigset_t)];
+    char __qemu_unused[1024 / 8 - sizeof(target_sigset_t)];
     /* last for future expansion */
     struct target_sigcontext tuc_mcontext;
 };
diff -uNr qemu-8.2.0/linux-user/arm/signal.c qemu-8.2.0.mod/linux-user/arm/signal.c
--- qemu-8.2.0/linux-user/arm/signal.c	2023-12-19 23:24:34.000000000 +0200
+++ qemu-8.2.0.mod/linux-user/arm/signal.c	2024-06-12 21:15:01.494536215 +0300
@@ -54,7 +54,7 @@
     target_stack_t tuc_stack;
     struct target_sigcontext tuc_mcontext;
     target_sigset_t  tuc_sigmask;       /* mask last for extensibility */
-    char __unused[128 - sizeof(target_sigset_t)];
+    char __qemu_unused[128 - sizeof(target_sigset_t)];
     abi_ulong tuc_regspace[128] __attribute__((__aligned__(8)));
 };
 
diff -uNr qemu-8.2.0/linux-user/riscv/signal.c qemu-8.2.0.mod/linux-user/riscv/signal.c
--- qemu-8.2.0/linux-user/riscv/signal.c	2023-12-19 23:24:34.000000000 +0200
+++ qemu-8.2.0.mod/linux-user/riscv/signal.c	2024-06-12 21:15:01.494536215 +0300
@@ -45,7 +45,7 @@
     abi_ptr uc_link;
     target_stack_t uc_stack;
     target_sigset_t uc_sigmask;
-    uint8_t   __unused[1024 / 8 - sizeof(target_sigset_t)];
+    uint8_t   __qemu_unused[1024 / 8 - sizeof(target_sigset_t)];
     struct target_sigcontext uc_mcontext QEMU_ALIGNED(16);
 };
 
diff -uNr qemu-8.2.0/linux-user/syscall_defs.h qemu-8.2.0.mod/linux-user/syscall_defs.h
--- qemu-8.2.0/linux-user/syscall_defs.h	2023-12-19 23:24:34.000000000 +0200
+++ qemu-8.2.0.mod/linux-user/syscall_defs.h	2024-06-12 21:15:23.174821140 +0300
@@ -1252,8 +1252,8 @@
     abi_ulong  target_st_mtime_nsec;
     abi_ulong  target_st_ctime;
     abi_ulong  target_st_ctime_nsec;
-    abi_ulong  __unused4;
-    abi_ulong  __unused5;
+    abi_ulong  __qemu_unused4;
+    abi_ulong  __qemu_unused5;
 };
 
 /* This matches struct stat64 in glibc2.1, hence the absolutely
@@ -1342,7 +1342,7 @@
     abi_long        target_st_ctime;
     abi_long        st_blksize;
     abi_long        st_blocks;
-    abi_ulong       __unused4[2];
+    abi_ulong       __qemu_unused4[2];
 };
 
 #define TARGET_HAS_STRUCT_STAT64
@@ -1376,7 +1376,7 @@
     abi_ulong       target_st_ctime;
     abi_ulong       target_st_ctime_nsec;
 
-    abi_ulong       __unused4[3];
+    abi_ulong       __qemu_unused4[3];
 };
 
 #elif defined(TARGET_SPARC)
@@ -1399,7 +1399,7 @@
     abi_ulong       target_st_ctime_nsec;
     abi_long        st_blksize;
     abi_long        st_blocks;
-    abi_ulong       __unused1[2];
+    abi_ulong       __qemu_unused1[2];
 };
 
 #define TARGET_HAS_STRUCT_STAT64
@@ -1435,8 +1435,8 @@
     abi_uint        target_st_ctime;
     abi_uint        target_st_ctime_nsec;
 
-    abi_uint        __unused1;
-    abi_uint        __unused2;
+    abi_uint        __qemu_unused1;
+    abi_uint        __qemu_unused2;
 };
 
 #elif defined(TARGET_PPC)
@@ -1464,10 +1464,10 @@
     abi_ulong  target_st_mtime_nsec;
     abi_ulong  target_st_ctime;
     abi_ulong  target_st_ctime_nsec;
-    abi_ulong  __unused4;
-    abi_ulong  __unused5;
+    abi_ulong  __qemu_unused4;
+    abi_ulong  __qemu_unused5;
 #if defined(TARGET_PPC64)
-    abi_ulong  __unused6;
+    abi_ulong  __qemu_unused6;
 #endif
 };
 
@@ -1492,8 +1492,8 @@
     abi_uint       target_st_mtime_nsec;
     abi_int        target_st_ctime;
     abi_uint       target_st_ctime_nsec;
-    abi_uint       __unused4;
-    abi_uint       __unused5;
+    abi_uint       __qemu_unused4;
+    abi_uint       __qemu_unused5;
 };
 #endif
 
@@ -1517,8 +1517,8 @@
     abi_ulong  target_st_mtime_nsec;
     abi_ulong  target_st_ctime;
     abi_ulong  target_st_ctime_nsec;
-    abi_ulong  __unused4;
-    abi_ulong  __unused5;
+    abi_ulong  __qemu_unused4;
+    abi_ulong  __qemu_unused5;
 };
 
 /* FIXME: Microblaze no-mmu user-space has a difference stat64 layout...  */
@@ -1566,13 +1566,13 @@
     abi_ulong  st_blksize;
     abi_ulong  st_blocks;
     abi_ulong  target_st_atime;
-    abi_ulong  __unused1;
+    abi_ulong  __qemu_unused1;
     abi_ulong  target_st_mtime;
-    abi_ulong  __unused2;
+    abi_ulong  __qemu_unused2;
     abi_ulong  target_st_ctime;
-    abi_ulong  __unused3;
-    abi_ulong  __unused4;
-    abi_ulong  __unused5;
+    abi_ulong  __qemu_unused3;
+    abi_ulong  __qemu_unused4;
+    abi_ulong  __qemu_unused5;
 };
 
 /* This matches struct stat64 in glibc2.1, hence the absolutely
@@ -1792,7 +1792,7 @@
     abi_ulong    target_st_mtime_nsec;
     abi_ulong    target_st_ctime;
     abi_ulong    target_st_ctime_nsec;
-    abi_long     __unused[3];
+    abi_long     __qemu_unused[3];
 };
 
 #elif defined(TARGET_SH4)
@@ -1815,8 +1815,8 @@
     abi_ulong  target_st_mtime_nsec;
     abi_ulong  target_st_ctime;
     abi_ulong  target_st_ctime_nsec;
-    abi_ulong  __unused4;
-    abi_ulong  __unused5;
+    abi_ulong  __qemu_unused4;
+    abi_ulong  __qemu_unused5;
 };
 
 /* This matches struct stat64 in glibc2.1, hence the absolutely
@@ -1879,7 +1879,7 @@
     abi_ulong       target_st_ctime;
     abi_ulong       target_st_ctime_nsec;
 
-    abi_long        __unused[3];
+    abi_long        __qemu_unused[3];
 };
 #elif defined(TARGET_S390X)
 struct target_stat {
@@ -1900,7 +1900,7 @@
     abi_ulong  target_st_ctime_nsec;
     abi_ulong  st_blksize;
     abi_long       st_blocks;
-    abi_ulong  __unused[3];
+    abi_ulong  __qemu_unused[3];
 };
 #elif defined(TARGET_AARCH64)
 #define TARGET_STAT_HAVE_NSEC
@@ -1923,7 +1923,7 @@
     abi_ulong  target_st_mtime_nsec;
     abi_long  target_st_ctime;
     abi_ulong  target_st_ctime_nsec;
-    abi_uint __unused[2];
+    abi_uint __qemu_unused[2];
 };
 #elif defined(TARGET_XTENSA)
 #define TARGET_STAT_HAVE_NSEC
@@ -1944,8 +1944,8 @@
     abi_ulong       target_st_mtime_nsec;
     abi_ulong       target_st_ctime;
     abi_ulong       target_st_ctime_nsec;
-    abi_ulong       __unused4;
-    abi_ulong       __unused5;
+    abi_ulong       __qemu_unused4;
+    abi_ulong       __qemu_unused5;
 };
 
 #define TARGET_HAS_STRUCT_STAT64
@@ -1959,7 +1959,7 @@
     abi_ullong st_rdev;         /* Device number, if device. */
     abi_llong st_size;          /* Size of file, in bytes. */
     abi_ulong st_blksize;       /* Optimal block size for I/O. */
-    abi_ulong __unused2;
+    abi_ulong __qemu_unused2;
     abi_ullong st_blocks;       /* Number 512-byte blocks allocated. */
     abi_ulong target_st_atime;  /* Time of last access. */
     abi_ulong target_st_atime_nsec;
@@ -1967,8 +1967,8 @@
     abi_ulong target_st_mtime_nsec;
     abi_ulong target_st_ctime;  /* Time of last status change. */
     abi_ulong target_st_ctime_nsec;
-    abi_ulong __unused4;
-    abi_ulong __unused5;
+    abi_ulong __qemu_unused4;
+    abi_ulong __qemu_unused5;
 };
 
 #elif defined(TARGET_OPENRISC) || defined(TARGET_NIOS2) \
@@ -1996,8 +1996,8 @@
     abi_ulong target_st_mtime_nsec;
     abi_long target_st_ctime;
     abi_ulong target_st_ctime_nsec;
-    abi_uint __unused4;
-    abi_uint __unused5;
+    abi_uint __qemu_unused4;
+    abi_uint __qemu_unused5;
 };
 
 #if !defined(TARGET_RISCV64)
@@ -2021,8 +2021,8 @@
     abi_uint target_st_mtime_nsec;
     abi_int target_st_ctime;
     abi_uint target_st_ctime_nsec;
-    abi_uint __unused4;
-    abi_uint __unused5;
+    abi_uint __qemu_unused4;
+    abi_uint __qemu_unused5;
 };
 #endif
 
