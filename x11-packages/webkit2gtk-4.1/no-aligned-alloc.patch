+++ ./Source/bmalloc/bmalloc/DebugHeap.cpp
@@ -122,7 +122,9 @@
 
 void* DebugHeap::memalign(size_t alignment, size_t size, FailureAction action)
 {
-    void* result = ::aligned_alloc(alignment, size);
+    void* result = nullptr;
+    if (posix_memalign(&result, alignment, size) != 0)
+        result = nullptr;
     RELEASE_BASSERT(action == FailureAction::ReturnNull || result);
     return result;
 }
+++ ./Source/WTF/wtf/FastMalloc.cpp
@@ -183,7 +183,9 @@
 void* fastAlignedMalloc(size_t alignment, size_t size) 
 {
     ASSERT_IS_WITHIN_LIMIT(size);
-    void* p = aligned_alloc(alignment, size);
+    void* p = nullptr;
+    if (posix_memalign(&p, alignment, size) != 0)
+        p = nullptr;
     if (UNLIKELY(!p))
         CRASH();
     return p;
@@ -192,7 +194,10 @@
 void* tryFastAlignedMalloc(size_t alignment, size_t size) 
 {
     FAIL_IF_EXCEEDS_LIMIT(size);
-    return aligned_alloc(alignment, size);
+    void* p = nullptr;
+    if (posix_memalign(&p, alignment, size) != 0)
+        p = nullptr;
+    return p;
 }
 
 void fastAlignedFree(void* p) 
