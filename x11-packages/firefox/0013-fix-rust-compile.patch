--- a/toolkit/components/extensions/storage/moz.build
+++ b/toolkit/components/extensions/storage/moz.build
@@ -17,7 +17,7 @@
 # a delegate for consumers to use instead. Android Components can then provide
 # an implementation of the delegate that's backed by the Rust component. For
 # details, please see bug 1626506, comment 4.
-if CONFIG["MOZ_WIDGET_TOOLKIT"] != "android":
+if False:
     EXPORTS.mozilla.extensions.storage += [
         "ExtensionStorageComponents.h",
     ]
--- a/toolkit/library/rust/shared/Cargo.toml
+++ b/toolkit/library/rust/shared/Cargo.toml
@@ -106,7 +106,6 @@
 
 libz-rs-sys = { git = "https://github.com/memorysafety/zlib-rs", rev = "4aa430ccb77537d0d60dab8db993ca51bb1194c5", features = ["custom-prefix"], optional = true }
 
-[target.'cfg(not(target_os = "android"))'.dependencies]
 gkrust-uniffi-components = { path = "../../../components/uniffi-bindgen-gecko-js/components/" }
 gkrust-uniffi-fixtures = { path = "../../../components/uniffi-bindgen-gecko-js/fixtures/", optional = true }
 viaduct = "0.1"
--- a/toolkit/library/rust/shared/lib.rs
+++ b/toolkit/library/rust/shared/lib.rs
@@ -54,7 +54,6 @@
 
 extern crate audio_thread_priority;
 
-#[cfg(not(target_os = "android"))]
 extern crate webext_storage_bridge;
 
 #[cfg(feature = "webrtc")]
@@ -84,13 +83,11 @@
 extern crate l10nregistry_ffi;
 extern crate localization_ffi;
 
-#[cfg(not(target_os = "android"))]
 extern crate gkrust_uniffi_components;
 
 #[cfg(feature = "uniffi_fixtures")]
 extern crate gkrust_uniffi_fixtures;
 
-#[cfg(not(target_os = "android"))]
 extern crate viaduct;
 
 extern crate gecko_logger;
