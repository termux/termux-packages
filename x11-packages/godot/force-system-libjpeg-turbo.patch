--- a/modules/jpg/SCsub
+++ b/modules/jpg/SCsub
@@ -82,7 +82,6 @@ def source_paths(files):
     return [thirdparty_dir + "/src/" + f for f in files]
 
 
-env_jpg.Prepend(CPPEXTPATH=[thirdparty_dir + "/src"])
 
 
 def add_bit_depth(bit_depth: int):
@@ -90,7 +89,6 @@ def add_bit_depth(bit_depth: int):
     env_bit_depth.disable_warnings()
     env_bit_depth["OBJSUFFIX"] = f"_{bit_depth}{env_bit_depth['OBJSUFFIX']}"
     env_bit_depth.Append(CPPDEFINES=[f"BITS_IN_JSAMPLE={bit_depth}"])
-    env_bit_depth.add_source_files(thirdparty_obj, source_paths(thirdparty_sources_by_bits[bit_depth]))
 
 
 add_bit_depth(8)
@@ -98,8 +96,6 @@ add_bit_depth(12)
 
 env_thirdparty = env_jpg.Clone()
 env_thirdparty.disable_warnings()
-env_thirdparty.add_source_files(thirdparty_obj, source_paths(thirdparty_sources_common))
-env.modules_sources += thirdparty_obj
 
 # Godot source files
 
@@ -108,5 +104,3 @@ module_obj = []
 env_jpg.add_source_files(module_obj, "*.cpp")
 env.modules_sources += module_obj
 
-# Needed to force rebuilding the module files when the thirdparty library is updated.
-env.Depends(module_obj, thirdparty_obj)
