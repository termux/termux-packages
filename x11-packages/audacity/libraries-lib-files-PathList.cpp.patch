+++ ./libraries/lib-files/PathList.cpp	2024-10-16 18:02:46.211602270 +0300
@@ -48,7 +48,7 @@
    const auto portablePrefix = wxPathOnly(wxPathOnly(programPath));
 
    // Make sure install prefix is set so wxStandardPath resolves paths properly
-   if (wxDirExists(portablePrefix + L"/share/audacity")) {
+   if (wxDirExists(portablePrefix + L"@TERMUX_PREFIX@/share/audacity")) {
       // use prefix relative to executable location to make Audacity portable
       standardPaths.SetInstallPrefix(portablePrefix);
    } else {
@@ -87,7 +87,7 @@
 
    FileNames::AddUniquePathToPathList(progPath, audacityPathList);
    // Add the path to modules:
-   FileNames::AddUniquePathToPathList(progPath + L"/lib/audacity", audacityPathList);
+   FileNames::AddUniquePathToPathList(progPath + L"@TERMUX_PREFIX@/lib/audacity", audacityPathList);
 
 #if !defined(__WXMSW__)
    // On Unix systems, the common directory structure is
@@ -97,8 +97,8 @@
 
    if (!progParentPath.IsEmpty())
    {
-      FileNames::AddUniquePathToPathList(progParentPath + L"/lib/audacity", audacityPathList);
-      FileNames::AddUniquePathToPathList(progParentPath + L"/lib", audacityPathList);
+      FileNames::AddUniquePathToPathList(progParentPath + L"@TERMUX_PREFIX@/lib/audacity", audacityPathList);
+      FileNames::AddUniquePathToPathList(progParentPath + L"@TERMUX_PREFIX@/lib", audacityPathList);
    }
 
 #if HAVE_GET_LIBRARY_PATH
@@ -116,9 +116,9 @@
       audacityPathList);
    FileNames::AddUniquePathToPathList(FileNames::ModulesDir(),
       audacityPathList);
-   FileNames::AddUniquePathToPathList(wxString::Format(installPrefix + L"/share/%s", wxT(AUDACITY_NAME)),
+   FileNames::AddUniquePathToPathList(wxString::Format(installPrefix + L"@TERMUX_PREFIX@/share/%s", wxT(AUDACITY_NAME)),
       audacityPathList);
-   FileNames::AddUniquePathToPathList(wxString::Format(installPrefix + L"/share/doc/%s", wxT(AUDACITY_NAME)),
+   FileNames::AddUniquePathToPathList(wxString::Format(installPrefix + L"@TERMUX_PREFIX@/share/doc/%s", wxT(AUDACITY_NAME)),
       audacityPathList);
 #else //AUDACITY_NAME
    FileNames::AddUniquePathToPathList(wxString::Format(wxT("%s/.audacity-files"),
@@ -126,13 +126,13 @@
       audacityPathList);
    FileNames::AddUniquePathToPathList(FileNames::ModulesDir(),
       audacityPathList);
-   FileNames::AddUniquePathToPathList(installPrefix + L"/share/audacity",
+   FileNames::AddUniquePathToPathList(installPrefix + L"@TERMUX_PREFIX@/share/audacity",
       audacityPathList);
-   FileNames::AddUniquePathToPathList(installPrefix + L"/share/doc/audacity",
+   FileNames::AddUniquePathToPathList(installPrefix + L"@TERMUX_PREFIX@/share/doc/audacity",
       audacityPathList);
 #endif //AUDACITY_NAME
 
-   FileNames::AddUniquePathToPathList(installPrefix + L"/share/locale",
+   FileNames::AddUniquePathToPathList(installPrefix + L"@TERMUX_PREFIX@/share/locale",
       audacityPathList);
 
    FileNames::AddUniquePathToPathList(wxString::Format(wxT("./locale")),
